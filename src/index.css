@tailwind base;
@tailwind components;
@tailwind utilities;

/* Modern Glassmorphism Design System for Rakha's Presentation
All colors MUST be HSL. Gradients and animations defined here.
*/

@layer base {
  :root {
    /* Dark Theme Base Colors */
    --background: 249 12% 6%;
    --foreground: 0 0% 98%;

    /* Primary Gradient Colors (#667eea to #764ba2) */
    --primary-start: 233 73% 71%;
    --primary-end: 267 27% 51%;
    --primary: 250 50% 61%;
    --primary-foreground: 0 0% 98%;

    /* Secondary Accent Colors (#f093fb to #f5576c) */
    --secondary-start: 303 84% 78%;
    --secondary-end: 349 87% 66%;
    --secondary: 326 85% 72%;
    --secondary-foreground: 0 0% 98%;

    /* Glass Cards */
    --glass: 0 0% 100%;
    --glass-foreground: 0 0% 5%;
    --glass-border: 0 0% 100%;

    /* Background Elements */
    --card: 249 12% 8%;
    --card-foreground: 0 0% 95%;

    /* UI Elements */
    --muted: 249 12% 15%;
    --muted-foreground: 0 0% 65%;
    --accent: 249 12% 12%;
    --accent-foreground: 0 0% 90%;
    --border: 249 12% 20%;
    --input: 249 12% 15%;
    --ring: 250 50% 61%;

    /* Destructive */
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    /* Popover */
    --popover: 249 12% 8%;
    --popover-foreground: 0 0% 95%;

    --radius: 1rem;

    /* Custom Glassmorphism Variables */
    --glass-backdrop: rgba(255, 255, 255, 0.1);
    --glass-backdrop-strong: rgba(255, 255, 255, 0.15);
    --glass-border-color: rgba(255, 255, 255, 0.2);
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary-start)), hsl(var(--primary-end)));
    --gradient-secondary: linear-gradient(135deg, hsl(var(--secondary-start)), hsl(var(--secondary-end)));
    --gradient-background: linear-gradient(135deg, hsl(249 12% 6%), hsl(267 27% 8%), hsl(233 73% 10%));
    
    /* Animations */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-spring: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-inter;
    font-family: 'Inter', system-ui, -apple-system, sans-serif;
  }
}

@layer utilities {
  /* Glassmorphism Effects */
  .glass {
    background: var(--glass-backdrop);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid var(--glass-border-color);
  }
  
  .glass-strong {
    background: var(--glass-backdrop-strong);
    backdrop-filter: blur(30px);
    -webkit-backdrop-filter: blur(30px);
    border: 1px solid var(--glass-border-color);
  }

  /* Gradient Backgrounds */
  .bg-gradient-primary {
    background: var(--gradient-primary);
  }
  
  .bg-gradient-secondary {
    background: var(--gradient-secondary);
  }
  
  .bg-gradient-background {
    background: var(--gradient-background);
  }

  /* Smooth Transitions */
  .transition-smooth {
    transition: var(--transition-smooth);
  }
  
  .transition-spring {
    transition: var(--transition-spring);
  }

  /* Floating Animation */
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-float-delayed {
    animation: float 6s ease-in-out infinite 2s;
  }

  /* Slide Animation */
  .slide-in-right {
    animation: slideInRight 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  .slide-in-left {
    animation: slideInLeft 0.8s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  /* Hover Effects */
  .hover-lift {
    transition: var(--transition-smooth);
  }
  
  .hover-lift:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
  }
}

@layer components {
  /* Animated Background Particles */
  .particles {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    top: 0;
    left: 0;
    z-index: 0;
  }
  
  .particles::before,
  .particles::after {
    content: '';
    position: absolute;
    width: 300px;
    height: 300px;
    border-radius: 50%;
    background: var(--gradient-primary);
    opacity: 0.1;
    animation: float 8s ease-in-out infinite;
  }
  
  .particles::before {
    top: 10%;
    left: 20%;
    animation-delay: 0s;
  }
  
  .particles::after {
    bottom: 10%;
    right: 20%;
    animation-delay: 4s;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  33% {
    transform: translateY(-20px) rotate(120deg);
  }
  66% {
    transform: translateY(20px) rotate(240deg);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(100px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-100px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}